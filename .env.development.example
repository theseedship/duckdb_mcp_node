# Development Environment Configuration
# This profile is optimized for local development and testing

# DuckDB Configuration
DUCKDB_MEMORY=2GB
DUCKDB_THREADS=2

# MCP Server Configuration
MCP_SERVER_NAME=duckdb-mcp-native-dev
MCP_SERVER_VERSION=0.7.2
MCP_MODE=stdio

# Security Configuration (permissive for development)
MCP_SECURITY_MODE=development
MCP_MAX_QUERY_SIZE=5000000  # 5MB - higher limit for testing
MCP_QUERY_TIMEOUT=60000      # 60s - longer timeout for debugging

# Cache Configuration
MCP_CACHE_DIR=/tmp/mcp-cache-dev
MCP_CACHE_TTL=60000          # 1 minute TTL - faster refresh in dev
MCP_CACHE_SIZE=52428800      # 50MB - smaller cache for dev

# Logging (verbose in development)
LOG_LEVEL=debug
LOG_FILE=logs/duckdb-mcp-dev.log

# DuckPGQ Configuration - DEVELOPMENT PROFILE
# Testing with edge/custom builds for DuckDB 1.4.x compatibility

# Enable DuckPGQ for testing
ENABLE_DUCKPGQ=true

# Use edge or custom source for testing DuckDB 1.4.x compatibility
# Option 1: Try edge builds (may not be available)
# DUCKPGQ_SOURCE=edge

# Option 2: Use custom build for DuckDB 1.4.x testing
DUCKPGQ_SOURCE=custom

# Specify URL to a DuckDB 1.4.x compatible build
# Replace with actual URL when available
# Example: https://github.com/cwida/duckpgq-extension/releases/download/vX.Y.Z/duckpgq-linux-amd64.duckdb_extension.gz
DUCKPGQ_CUSTOM_REPO=

# Optional: Specific version
DUCKPGQ_VERSION=

# Strict mode OFF in development (graceful fallback)
# Set to true only if you need to ensure DuckPGQ loads successfully
DUCKPGQ_STRICT_MODE=false

# Required for community extensions
ALLOW_UNSIGNED_EXTENSIONS=true

# Optional: S3/MinIO Configuration (for local testing)
# Use public endpoint for development
MINIO_PUBLIC_ENDPOINT=http://localhost:9000
MINIO_PRIVATE_ENDPOINT=http://minio:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_USE_SSL=false
MINIO_REGION=us-east-1
BUCKET_NAME=duckdb-data-dev

# Development Notes:
#
# 1. DUCKPGQ_SOURCE Options for Development:
#    - custom: Use when testing specific builds
#    - edge: Try latest pre-release (may not be available for 1.4.x)
#    - community: Gracefully falls back if binaries unavailable
#
# 2. To test without DuckPGQ:
#    Set ENABLE_DUCKPGQ=false
#
# 3. To test with strict loading (fail if DuckPGQ unavailable):
#    Set DUCKPGQ_STRICT_MODE=true
#
# 4. Finding Compatible Builds:
#    - Check https://github.com/cwida/duckpgq-extension/releases
#    - Look for builds matching DuckDB 1.4.x and your platform
#    - Update DUCKPGQ_CUSTOM_REPO with direct download URL
#
# 5. Validation:
#    Run: npm run test:duckpgq
